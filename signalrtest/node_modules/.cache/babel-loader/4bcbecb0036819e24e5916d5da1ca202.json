{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chrispearson/Projects/SignalRChatTest/signalrtest/src/Chat.jsx\";\nimport React, { Component } from 'react';\nimport { LogLevel, HubConnectionBuilder } from '@aspnet/signalr';\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.connection = async () => {\n      return new HubConnectionBuilder().withUrl(\"https://cpsignalrchattest.service.signalr.net/test\").configureLogging(LogLevel.Information).build();\n    };\n\n    this.start = async () => {\n      try {\n        await this.connection.start;\n        console.log(\"SignalR Connected.\");\n      } catch (err) {\n        console.log(err);\n        setTimeout(this.start, 5000);\n      }\n    };\n\n    this.componentDidMount = () => {\n      const nick = \"chrisA\"; //window.prompt('Your name:', 'John');\n\n      this.start(); // const hubConnection = new HubConnectionBuilder()\n      // .withUrl(\"https://cpsignalrchattest.service.signalr.net/test\")\n      // .configureLogging(LogLevel.Information)\n      // .build();\n      // this.setState({ hubConnection, nick }, () => {\n      //   this.state.hubConnection\n      //     .start()\n      //     .then(() => console.log('Connection started!'))\n      //     .catch(err => console.log('Error while establishing connection :('));\n      //   this.state.hubConnection.on('sendToAll', (nick, receivedMessage) => {\n      //     const text = `${nick}: ${receivedMessage}`;\n      //     const messages = this.state.messages.concat([text]);\n      //     this.setState({ messages });\n      //   });\n      // });\n    };\n\n    this.sendMessage = () => {\n      this.state.hubConnection.invoke('sendToAll', this.state.nick, this.state.message).catch(err => console.error(err));\n      this.setState({\n        message: ''\n      });\n    };\n\n    this.state = {\n      nick: '',\n      message: '',\n      messages: [],\n      hubConnection: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.message,\n        onChange: e => this.setState({\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: 'block'\n          },\n          children: [\" \", message, \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/chrispearson/Projects/SignalRChatTest/signalrtest/src/Chat.jsx"],"names":["React","Component","LogLevel","HubConnectionBuilder","Chat","constructor","props","connection","withUrl","configureLogging","Information","build","start","console","log","err","setTimeout","componentDidMount","nick","sendMessage","state","hubConnection","invoke","message","catch","error","setState","messages","render","e","target","value","map","index","display"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,oBAAnB,QAA+C,iBAA/C;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAC3BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,UAXmB,GAWN,YAAY;AACvB,aAAO,IAAIJ,oBAAJ,GACNK,OADM,CACE,oDADF,EAENC,gBAFM,CAEWP,QAAQ,CAACQ,WAFpB,EAGNC,KAHM,EAAP;AAID,KAhBkB;;AAAA,SAkBnBC,KAlBmB,GAkBX,YAAY;AAClB,UAAI;AACF,cAAM,KAAKL,UAAL,CAAgBK,KAAtB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,OAHD,CAGE,OAAOC,GAAP,EAAY;AACVF,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAC,QAAAA,UAAU,CAAC,KAAKJ,KAAN,EAAa,IAAb,CAAV;AACH;AACF,KA1BkB;;AAAA,SA4BnBK,iBA5BmB,GA4BC,MAAM;AACxB,YAAMC,IAAI,GAAG,QAAb,CADwB,CACF;;AACtB,WAAKN,KAAL,GAFwB,CAGxB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACD,KAhDkB;;AAAA,SAkDnBO,WAlDmB,GAkDL,MAAM;AAClB,WAAKC,KAAL,CAAWC,aAAX,CACGC,MADH,CACU,WADV,EACuB,KAAKF,KAAL,CAAWF,IADlC,EACwC,KAAKE,KAAL,CAAWG,OADnD,EAEGC,KAFH,CAEST,GAAG,IAAIF,OAAO,CAACY,KAAR,CAAcV,GAAd,CAFhB;AAIE,WAAKW,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAxDkB;;AAGjB,SAAKH,KAAL,GAAa;AACXF,MAAAA,IAAI,EAAE,EADK;AAEXK,MAAAA,OAAO,EAAE,EAFE;AAGXI,MAAAA,QAAQ,EAAE,EAHC;AAIXN,MAAAA,aAAa,EAAE;AAJJ,KAAb;AAMD;;AAiDDO,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWG,OAFpB;AAGE,QAAA,QAAQ,EAAEM,CAAC,IAAI,KAAKH,QAAL,CAAc;AAAEH,UAAAA,OAAO,EAAEM,CAAC,CAACC,MAAF,CAASC;AAApB,SAAd;AAHjB;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAQ,QAAA,OAAO,EAAE,KAAKZ,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAUE;AAAA,kBACG,KAAKC,KAAL,CAAWO,QAAX,CAAoBK,GAApB,CAAwB,CAACT,OAAD,EAAUU,KAAV,kBACvB;AAAM,UAAA,KAAK,EAAE;AAACC,YAAAA,OAAO,EAAE;AAAV,WAAb;AAAA,0BAA+CX,OAA/C;AAAA,WAAsCU,KAAtC;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AA9E0B;;AAiF7B,eAAe7B,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { LogLevel, HubConnectionBuilder } from '@aspnet/signalr';\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      nick: '',\n      message: '',\n      messages: [],\n      hubConnection: null,\n    };\n  }\n\n  connection = async () => { \n    return new HubConnectionBuilder()\n    .withUrl(\"https://cpsignalrchattest.service.signalr.net/test\")\n    .configureLogging(LogLevel.Information)\n    .build();\n  }\n\n  start = async () => {\n    try {\n      await this.connection.start;\n      console.log(\"SignalR Connected.\");\n    } catch (err) {\n        console.log(err);\n        setTimeout(this.start, 5000);\n    }\n  }\n\n  componentDidMount = () => {\n    const nick = \"chrisA\";//window.prompt('Your name:', 'John');\n    this.start();\n    // const hubConnection = new HubConnectionBuilder()\n    // .withUrl(\"https://cpsignalrchattest.service.signalr.net/test\")\n    // .configureLogging(LogLevel.Information)\n    // .build();\n\n    // this.setState({ hubConnection, nick }, () => {\n    //   this.state.hubConnection\n    //     .start()\n    //     .then(() => console.log('Connection started!'))\n    //     .catch(err => console.log('Error while establishing connection :('));\n\n    //   this.state.hubConnection.on('sendToAll', (nick, receivedMessage) => {\n    //     const text = `${nick}: ${receivedMessage}`;\n    //     const messages = this.state.messages.concat([text]);\n    //     this.setState({ messages });\n    //   });\n    // });\n  }\n\n  sendMessage = () => {\n    this.state.hubConnection\n      .invoke('sendToAll', this.state.nick, this.state.message)\n      .catch(err => console.error(err));\n  \n      this.setState({message: ''});      \n  };\n  \n  render() {\n    return (\n      <div>\n        <br />\n        <input\n          type=\"text\"\n          value={this.state.message}\n          onChange={e => this.setState({ message: e.target.value })}\n        />\n  \n        <button onClick={this.sendMessage}>Send</button>\n  \n        <div>\n          {this.state.messages.map((message, index) => (\n            <span style={{display: 'block'}} key={index}> {message} </span>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}