{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chrispearson/Projects/SignalRChatTest/signalrtest/src/Chat.jsx\";\nimport React, { Component } from 'react';\nimport { LogLevel, HubConnectionBuilder } from '@aspnet/signalr';\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      const nick = window.prompt('Your name:', 'John');\n      const hubConnection = new HubConnectionBuilder().withUrl(\"https://cpsignalrchattest.service.signalr.net?AccessKey=ToZeLxseqdwcGqKxiBjr5clQe5wXXt4jaGRom6TMvNE=\").configureLogging(LogLevel.Information).build();\n      debugger;\n      this.setState({\n        hubConnection,\n        nick\n      }, () => {\n        this.state.hubConnection.start().then(() => console.log('Connection started!')).catch(err => console.log('Error while establishing connection :('));\n        this.state.hubConnection.on('sendToAll', (nick, receivedMessage) => {\n          const text = `${nick}: ${receivedMessage}`;\n          const messages = this.state.messages.concat([text]);\n          this.setState({\n            messages\n          });\n        });\n      });\n    };\n\n    this.sendMessage = () => {\n      this.state.hubConnection.invoke('sendToAll', this.state.nick, this.state.message).catch(err => console.error(err));\n      this.setState({\n        message: ''\n      });\n    };\n\n    this.state = {\n      nick: '',\n      message: '',\n      messages: [],\n      hubConnection: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.message,\n        onChange: e => this.setState({\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: 'block'\n          },\n          children: [\" \", message, \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/chrispearson/Projects/SignalRChatTest/signalrtest/src/Chat.jsx"],"names":["React","Component","LogLevel","HubConnectionBuilder","Chat","constructor","props","componentDidMount","nick","window","prompt","hubConnection","withUrl","configureLogging","Information","build","setState","state","start","then","console","log","catch","err","on","receivedMessage","text","messages","concat","sendMessage","invoke","message","error","render","e","target","value","map","index","display"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,oBAAnB,QAA+C,iBAA/C;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAC3BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,iBAXmB,GAWC,MAAM;AACxB,YAAMC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,YAAd,EAA4B,MAA5B,CAAb;AAEA,YAAMC,aAAa,GAAG,IAAIR,oBAAJ,GACrBS,OADqB,CACb,sGADa,EAErBC,gBAFqB,CAEJX,QAAQ,CAACY,WAFL,EAGrBC,KAHqB,EAAtB;AAIA;AACA,WAAKC,QAAL,CAAc;AAAEL,QAAAA,aAAF;AAAiBH,QAAAA;AAAjB,OAAd,EAAuC,MAAM;AAC3C,aAAKS,KAAL,CAAWN,aAAX,CACGO,KADH,GAEGC,IAFH,CAEQ,MAAMC,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAFd,EAGGC,KAHH,CAGSC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAY,wCAAZ,CAHhB;AAKA,aAAKJ,KAAL,CAAWN,aAAX,CAAyBa,EAAzB,CAA4B,WAA5B,EAAyC,CAAChB,IAAD,EAAOiB,eAAP,KAA2B;AAClE,gBAAMC,IAAI,GAAI,GAAElB,IAAK,KAAIiB,eAAgB,EAAzC;AACA,gBAAME,QAAQ,GAAG,KAAKV,KAAL,CAAWU,QAAX,CAAoBC,MAApB,CAA2B,CAACF,IAAD,CAA3B,CAAjB;AACA,eAAKV,QAAL,CAAc;AAAEW,YAAAA;AAAF,WAAd;AACD,SAJD;AAKD,OAXD;AAYD,KA/BkB;;AAAA,SAiCnBE,WAjCmB,GAiCL,MAAM;AAClB,WAAKZ,KAAL,CAAWN,aAAX,CACGmB,MADH,CACU,WADV,EACuB,KAAKb,KAAL,CAAWT,IADlC,EACwC,KAAKS,KAAL,CAAWc,OADnD,EAEGT,KAFH,CAESC,GAAG,IAAIH,OAAO,CAACY,KAAR,CAAcT,GAAd,CAFhB;AAIE,WAAKP,QAAL,CAAc;AAACe,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAvCkB;;AAGjB,SAAKd,KAAL,GAAa;AACXT,MAAAA,IAAI,EAAE,EADK;AAEXuB,MAAAA,OAAO,EAAE,EAFE;AAGXJ,MAAAA,QAAQ,EAAE,EAHC;AAIXhB,MAAAA,aAAa,EAAE;AAJJ,KAAb;AAMD;;AAgCDsB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWc,OAFpB;AAGE,QAAA,QAAQ,EAAEG,CAAC,IAAI,KAAKlB,QAAL,CAAc;AAAEe,UAAAA,OAAO,EAAEG,CAAC,CAACC,MAAF,CAASC;AAApB,SAAd;AAHjB;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAQ,QAAA,OAAO,EAAE,KAAKP,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAUE;AAAA,kBACG,KAAKZ,KAAL,CAAWU,QAAX,CAAoBU,GAApB,CAAwB,CAACN,OAAD,EAAUO,KAAV,kBACvB;AAAM,UAAA,KAAK,EAAE;AAACC,YAAAA,OAAO,EAAE;AAAV,WAAb;AAAA,0BAA+CR,OAA/C;AAAA,WAAsCO,KAAtC;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AA7D0B;;AAgE7B,eAAelC,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { LogLevel, HubConnectionBuilder } from '@aspnet/signalr';\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      nick: '',\n      message: '',\n      messages: [],\n      hubConnection: null,\n    };\n  }\n\n  componentDidMount = () => {\n    const nick = window.prompt('Your name:', 'John');\n\n    const hubConnection = new HubConnectionBuilder()\n    .withUrl(\"https://cpsignalrchattest.service.signalr.net?AccessKey=ToZeLxseqdwcGqKxiBjr5clQe5wXXt4jaGRom6TMvNE=\")\n    .configureLogging(LogLevel.Information)\n    .build();\n    debugger;\n    this.setState({ hubConnection, nick }, () => {\n      this.state.hubConnection\n        .start()\n        .then(() => console.log('Connection started!'))\n        .catch(err => console.log('Error while establishing connection :('));\n\n      this.state.hubConnection.on('sendToAll', (nick, receivedMessage) => {\n        const text = `${nick}: ${receivedMessage}`;\n        const messages = this.state.messages.concat([text]);\n        this.setState({ messages });\n      });\n    });\n  }\n\n  sendMessage = () => {\n    this.state.hubConnection\n      .invoke('sendToAll', this.state.nick, this.state.message)\n      .catch(err => console.error(err));\n  \n      this.setState({message: ''});      \n  };\n  \n  render() {\n    return (\n      <div>\n        <br />\n        <input\n          type=\"text\"\n          value={this.state.message}\n          onChange={e => this.setState({ message: e.target.value })}\n        />\n  \n        <button onClick={this.sendMessage}>Send</button>\n  \n        <div>\n          {this.state.messages.map((message, index) => (\n            <span style={{display: 'block'}} key={index}> {message} </span>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}